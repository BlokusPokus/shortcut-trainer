[
  {
    "key": "shift+escape",
    "command": "closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "editor.closeTestPeek",
    "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
  },
  {
    "key": "shift+escape",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "escape",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "cmd+a",
    "command": "editor.action.selectAll"
  },
  {
    "key": "cmd+down",
    "command": "inlineChat.arrowOutDown",
    "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
  },
  {
    "key": "cmd+up",
    "command": "inlineChat.arrowOutUp",
    "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
  },
  {
    "key": "ctrl+o",
    "command": "lineBreakInsert",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+tab",
    "command": "outdent",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "shift+down",
    "command": "cursorColumnSelectDown",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+left",
    "command": "cursorColumnSelectLeft",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+pagedown",
    "command": "cursorColumnSelectPageDown",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+pageup",
    "command": "cursorColumnSelectPageUp",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+right",
    "command": "cursorColumnSelectRight",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+up",
    "command": "cursorColumnSelectUp",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "escape",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "cmd+down",
    "command": "notebook.cell.chat.arrowOutDown",
    "when": "inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
  },
  {
    "key": "cmd+up",
    "command": "notebook.cell.chat.arrowOutUp",
    "when": "inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
  },
  {
    "key": "cmd+up",
    "command": "notebook.cell.focusChatWidget",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "key": "cmd+down",
    "command": "notebook.cell.focusNextChatWidget",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "cmd+down",
    "command": "inlineChat.focus",
    "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'"
  },
  {
    "key": "cmd+up",
    "command": "inlineChat.focus",
    "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'"
  },
  {
    "key": "escape",
    "command": "notebook.cell.chat.acceptChanges",
    "when": "inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused"
  },
  {
    "key": "f12",
    "command": "goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "f4",
    "command": "goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "shift+f12",
    "command": "goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "shift+f4",
    "command": "goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "escape",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'"
  },
  {
    "key": "cmd+f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "cmd+backspace",
    "command": "deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+delete",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+backspace",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+backspace",
    "command": "deleteWordPartLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+delete",
    "command": "deleteWordPartRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+delete",
    "command": "deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "tab",
    "command": "editor.action.acceptGPT4",
    "when": "hasGPT4Diff"
  },
  {
    "key": "f7",
    "command": "editor.action.accessibleDiffViewer.next",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+f7",
    "command": "editor.action.accessibleDiffViewer.prev",
    "when": "isInDiffEditor"
  },
  {
    "key": "cmd+r cmd+c",
    "command": "editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+.",
    "command": "editor.action.autoFix",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "shift+alt+a",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "escape",
    "command": "editor.action.cancelSelectionAnchor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "cmd+f2",
    "command": "editor.action.changeAll",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+c",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "key": "cmd+x",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "key": "cmd+v",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "key": "cmd+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+f3",
    "command": "editor.action.dirtydiff.next",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f3",
    "command": "editor.action.dirtydiff.previous",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "enter",
    "command": "editor.action.extensioneditor.findNext",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.extensioneditor.findPrevious",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "cmd+f",
    "command": "editor.action.extensioneditor.showfind",
    "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "cmd+r cmd+f",
    "command": "editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+down",
    "command": "editor.action.goToBottomHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "end",
    "command": "editor.action.goToBottomHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "enter",
    "command": "editor.action.goToFocusedStickyScrollLine",
    "when": "stickyScrollFocused"
  },
  {
    "key": "cmd+f12",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus"
  },
  {
    "key": "shift+f12",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+up",
    "command": "editor.action.goToTopHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "home",
    "command": "editor.action.goToTopHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "escape",
    "command": "editor.action.hideColorPicker",
    "when": "standaloneColorPickerVisible"
  },
  {
    "key": "shift+cmd+.",
    "command": "editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+,",
    "command": "editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+]",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "escape",
    "command": "editor.action.inlineEdit.reject",
    "when": "inlineEditVisible && !editorReadonly"
  },
  {
    "key": "escape",
    "command": "editor.action.inlineEdits.hide",
    "when": "inlineEditsVisible"
  },
  {
    "key": "alt+]",
    "command": "editor.action.inlineEdits.showNext",
    "when": "inlineEditsVisible && !editorReadonly"
  },
  {
    "key": "alt+[",
    "command": "editor.action.inlineEdits.showPrevious",
    "when": "inlineEditsVisible && !editorReadonly"
  },
  {
    "key": "escape",
    "command": "editor.action.inlineSuggest.hide",
    "when": "inlineSuggestionVisible"
  },
  {
    "key": "alt+]",
    "command": "editor.action.inlineSuggest.showNext",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "alt+[",
    "command": "editor.action.inlineSuggest.showPrevious",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "enter",
    "command": "editor.action.insertColorWithStandaloneColorPicker",
    "when": "standaloneColorPickerFocused"
  },
  {
    "key": "alt+cmd+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+i",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+\\",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+f2",
    "command": "editor.action.linkedEditing",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+f8",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "f8",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+f8",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "shift+f8",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+f8",
    "command": "editor.action.marker.this",
    "when": "editorFocus"
  },
  {
    "key": "alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+r cmd+d",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+f9",
    "command": "editor.action.nextCommentThreadAction"
  },
  {
    "key": "cmd+r alt+cmd+down",
    "command": "editor.action.nextCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "f3",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "cmd+g",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "enter",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "cmd+f3",
    "command": "editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+o",
    "command": "editor.action.organizeImports",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
  },
  {
    "key": "cmd+[",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "editor.action.pageDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "pagedown",
    "command": "editor.action.pageDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "alt+up",
    "command": "editor.action.pageUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "pageup",
    "command": "editor.action.pageUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "alt+f12",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+cmd+f12",
    "command": "editor.action.peekImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+f9",
    "command": "editor.action.previousCommentThreadAction"
  },
  {
    "key": "cmd+r alt+cmd+up",
    "command": "editor.action.previousCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "shift+f3",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "shift+cmd+f3",
    "command": "editor.action.previousSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "cmd+.",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "editor.action.refactor",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+backspace",
    "command": "editor.action.removeBrackets",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+r cmd+u",
    "command": "editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f12",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "key": "cmd+f12",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
  },
  {
    "key": "cmd+r f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+r cmd+f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
  },
  {
    "key": "down",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "left",
    "command": "editor.action.scrollLeftHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "right",
    "command": "editor.action.scrollRightHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "up",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "escape",
    "command": "editor.action.selectEditor",
    "when": "stickyScrollFocused"
  },
  {
    "key": "cmd+r cmd+k",
    "command": "editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "shift+cmd+l",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "down",
    "command": "editor.action.selectNextStickyScrollLine",
    "when": "stickyScrollFocused"
  },
  {
    "key": "up",
    "command": "editor.action.selectPreviousStickyScrollLine",
    "when": "stickyScrollFocused"
  },
  {
    "key": "cmd+r cmd+b",
    "command": "editor.action.setSelectionAnchor",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+f10",
    "command": "editor.action.showContextMenu",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+r cmd+i",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+left",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+f",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.submitComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.toggleTabFocusMode"
  },
  {
    "key": "alt+z",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+t",
    "command": "editor.action.transposeLetters",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "cmd+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "alt+escape",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "cmd+r cmd+x",
    "command": "editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "enter",
    "command": "editor.action.webvieweditor.findNext",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.webvieweditor.findPrevious",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "escape",
    "command": "editor.action.webvieweditor.hideFind",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "cmd+f",
    "command": "editor.action.webvieweditor.showFind",
    "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "f7",
    "command": "editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "shift+f7",
    "command": "editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "escape",
    "command": "editor.cancelOperation",
    "when": "cancellableOperation"
  },
  {
    "key": "cmd+.",
    "command": "editor.changeDropType",
    "when": "dropWidgetVisible"
  },
  {
    "key": "cmd+.",
    "command": "editor.changePasteType",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "cmd+r cmd+,",
    "command": "editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "escape",
    "command": "editor.debug.action.closeExceptionWidget",
    "when": "exceptionWidgetVisible"
  },
  {
    "key": "cmd+r cmd+i",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "f9",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
  },
  {
    "key": "tab",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "alt+cmd+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+0",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+/",
    "command": "editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+-",
    "command": "editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+8",
    "command": "editor.foldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+1",
    "command": "editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+2",
    "command": "editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+3",
    "command": "editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+4",
    "command": "editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+5",
    "command": "editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+6",
    "command": "editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+7",
    "command": "editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+[",
    "command": "editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "f12",
    "command": "editor.gotoNextSymbolFromResult",
    "when": "hasSymbols"
  },
  {
    "key": "escape",
    "command": "editor.gotoNextSymbolFromResult.cancel",
    "when": "hasSymbols"
  },
  {
    "key": "escape",
    "command": "editor.hideDropWidget",
    "when": "dropWidgetVisible"
  },
  {
    "key": "escape",
    "command": "editor.hidePasteWidget",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "cmd+r cmd+.",
    "command": "editor.removeManualFoldingRanges",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+l",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r shift+cmd+l",
    "command": "editor.toggleFoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+j",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+=",
    "command": "editor.unfoldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+9",
    "command": "editor.unfoldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+r cmd+]",
    "command": "editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "tab",
    "command": "insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "cmd+enter",
    "command": "interactive.execute",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "shift+enter",
    "command": "interactive.execute",
    "when": "config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "enter",
    "command": "interactive.execute",
    "when": "!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "escape",
    "command": "notebook.cell.chat.discard",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit"
  },
  {
    "key": "pagedown",
    "command": "notebook.cell.cursorPageDown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "shift+pagedown",
    "command": "notebook.cell.cursorPageDownSelect",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
  },
  {
    "key": "pageup",
    "command": "notebook.cell.cursorPageUp",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "shift+pageup",
    "command": "notebook.cell.cursorPageUpSelect",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
  },
  {
    "key": "shift+cmd+v",
    "command": "notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "down",
    "command": "notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "up",
    "command": "notebook.focusPreviousEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "key": "shift+alt+f",
    "command": "notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "cmd+enter",
    "command": "repl.execute",
    "when": "activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "shift+enter",
    "command": "repl.execute",
    "when": "config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "enter",
    "command": "repl.execute",
    "when": "!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "shift+cmd+r",
    "command": "rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "escape",
    "command": "search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "search.searchEditor.action.deleteFileResults",
    "when": "inSearchEditor"
  },
  {
    "key": "escape",
    "command": "settings.action.clearSearchResults",
    "when": "inSettingsEditor && inSettingsSearch"
  },
  {
    "key": "cmd+f",
    "command": "settings.action.search",
    "when": "inSettingsEditor"
  },
  {
    "key": "cmd+r f2",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "cmd+/",
    "command": "workbench.action.chat.attachContext",
    "when": "inChatInput && chatLocation == 'panel' || config.chat.experimental.variables.editor && inChatInput && chatLocation == 'editor' || config.chat.experimental.variables.notebook && inChatInput && chatLocation == 'notebook' || config.chat.experimental.variables.terminal && inChatInput && chatLocation == 'terminal'"
  },
  {
    "key": "alt+f5",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "escape",
    "command": "workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "tab",
    "command": "editor.action.inlineEdit.accept",
    "when": "cursorAtInlineEdit && inlineEditVisible && !editorReadonly"
  },
  {
    "key": "alt+cmd+=",
    "command": "editor.action.inlineEdit.jumpTo",
    "when": "inlineEditVisible && !cursorAtInlineEdit && !editorReadonly"
  },
  {
    "key": "alt+cmd+=",
    "command": "editor.action.inlineEdit.trigger",
    "when": "!editorReadonly && !inlineEditVisible"
  },
  {
    "key": "cmd+right",
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "alt+f8",
    "command": "testing.goToNextMessage",
    "when": "editorFocus && testing.isPeekVisible"
  },
  {
    "key": "shift+alt+f8",
    "command": "testing.goToPreviousMessage",
    "when": "editorFocus && testing.isPeekVisible"
  },
  {
    "key": "shift+escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "alt+cmd+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "shift+cmd+1",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "enter",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+cmd+c",
    "command": "toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+p",
    "command": "togglePreserveCase",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+=",
    "command": "editor.action.inlineEdit.jumpBack",
    "when": "cursorAtInlineEdit && !editorReadonly"
  },
  {
    "key": "cmd+enter",
    "command": "notebook.cell.chat.acceptChanges",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
  },
  {
    "key": "escape",
    "command": "leaveEditorMessage",
    "when": "messageVisible"
  },
  {
    "key": "shift+escape",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "escape",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "shift+escape",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "escape",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+down",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "down",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+up",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "up",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "tab",
    "command": "insertBestCompletion",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "shift+tab",
    "command": "insertPrevSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "enter",
    "command": "acceptRenameInput",
    "when": "editorFocus && renameInputVisible && !isComposing"
  },
  {
    "key": "cmd+enter",
    "command": "acceptRenameInputWithPreview",
    "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing"
  },
  {
    "key": "shift+escape",
    "command": "cancelLinkedEditingInput",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "key": "escape",
    "command": "cancelLinkedEditingInput",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "key": "shift+escape",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "escape",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "alt+cmd+c",
    "command": "copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "cmd+r alt+cmd+c",
    "command": "copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+cmd+c",
    "command": "copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "cmd+r shift+alt+cmd+c",
    "command": "copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "alt+-",
    "command": "decreaseSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+f1",
    "command": "editor.action.accessibilityHelp",
    "when": "!accessibilityHelpIsShown"
  },
  {
    "key": "alt+a",
    "command": "editor.action.accessibilityHelpConfigureAssignedKeybindings",
    "when": "accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings"
  },
  {
    "key": "alt+k",
    "command": "editor.action.accessibilityHelpConfigureKeybindings",
    "when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings"
  },
  {
    "key": "alt+h",
    "command": "editor.action.accessibilityHelpOpenHelpLink",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "alt+f2",
    "command": "editor.action.accessibleView"
  },
  {
    "key": "ctrl+/",
    "command": "editor.action.accessibleViewAcceptInlineCompletion",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
  },
  {
    "key": "alt+f6",
    "command": "editor.action.accessibleViewDisableHint",
    "when": "accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled"
  },
  {
    "key": "alt+]",
    "command": "editor.action.accessibleViewNext",
    "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
  },
  {
    "key": "alt+cmd+pagedown",
    "command": "editor.action.accessibleViewNextCodeBlock",
    "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat'"
  },
  {
    "key": "alt+[",
    "command": "editor.action.accessibleViewPrevious",
    "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
  },
  {
    "key": "alt+cmd+pageup",
    "command": "editor.action.accessibleViewPreviousCodeBlock",
    "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat'"
  },
  {
    "key": "cmd+r cmd+k",
    "command": "editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/Users/ianleblanc/Library/Application%20Support/Cursor/User/keybindings.json'"
  },
  {
    "key": "tab",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "shift+f9",
    "command": "editor.debug.action.toggleInlineBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+d",
    "command": "editor.detectLanguage",
    "when": "editorTextFocus && !notebookEditable"
  },
  {
    "key": "shift+enter",
    "command": "editor.refocusCallHierarchy",
    "when": "callHierarchyVisible"
  },
  {
    "key": "shift+enter",
    "command": "editor.refocusTypeHierarchy",
    "when": "typeHierarchyVisible"
  },
  {
    "key": "shift+alt+h",
    "command": "editor.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "editor.showIncomingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "editor.showOutgoingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "editor.showSubtypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
  },
  {
    "key": "shift+alt+h",
    "command": "editor.showSupertypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
  },
  {
    "key": "alt+=",
    "command": "increaseSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "cmd+r i",
    "command": "inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
  },
  {
    "key": "cmd+i",
    "command": "inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
  },
  {
    "key": "cmd+z",
    "command": "inlineChat.unstash",
    "when": "inlineChatHasStashedSession && !editorReadonly"
  },
  {
    "key": "down",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "down",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.repl' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "up",
    "command": "interactive.history.previous",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "key": "up",
    "command": "interactive.history.previous",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.repl' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "key": "cmd+down",
    "command": "interactive.scrollToBottom",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "cmd+up",
    "command": "interactive.scrollToTop",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "enter",
    "command": "keybindings.editor.acceptWhenExpression",
    "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
  },
  {
    "key": "cmd+r cmd+a",
    "command": "keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "escape",
    "command": "keybindings.editor.clearSearchResults",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "cmd+c",
    "command": "keybindings.editor.copyKeybindingEntry",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "key": "enter",
    "command": "keybindings.editor.defineKeybinding",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "key": "cmd+r cmd+e",
    "command": "keybindings.editor.defineWhenExpression",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "cmd+down",
    "command": "keybindings.editor.focusKeybindings",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "alt+cmd+k",
    "command": "keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "escape",
    "command": "keybindings.editor.rejectWhenExpression",
    "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
  },
  {
    "key": "cmd+backspace",
    "command": "keybindings.editor.removeKeybinding",
    "when": "inKeybindings && keybindingFocus && !inputFocus"
  },
  {
    "key": "cmd+f",
    "command": "keybindings.editor.searchKeybindings",
    "when": "inKeybindings"
  },
  {
    "key": "alt+cmd+p",
    "command": "keybindings.editor.toggleSortByPrecedence",
    "when": "inKeybindings"
  },
  {
    "key": "backspace",
    "command": "noteMultiCursor.deleteLeft",
    "when": "config.notebook.multiSelect.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectState == '1' || config.notebook.multiSelect.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectState == '2'"
  },
  {
    "key": "escape",
    "command": "noteMultiCursor.exit",
    "when": "config.notebook.multiSelect.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "cmd+d",
    "command": "notebook.addFindMatchToSelection",
    "when": "config.notebook.multiSelect.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "y",
    "command": "notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "key": "m",
    "command": "notebook.cell.changeToMarkdown",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
  },
  {
    "key": "enter",
    "command": "notebook.cell.chat.accept",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
  },
  {
    "key": "cmd+enter",
    "command": "notebook.cell.chat.acceptChanges",
    "when": "notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'"
  },
  {
    "key": "cmd+down",
    "command": "notebook.cell.chat.focus",
    "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above'"
  },
  {
    "key": "cmd+up",
    "command": "notebook.cell.chat.focus",
    "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below'"
  },
  {
    "key": "cmd+r i",
    "command": "notebook.cell.chat.start",
    "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+i",
    "command": "notebook.cell.chat.start",
    "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "alt+delete",
    "command": "notebook.cell.clearOutputs",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "notebook.cell.copyDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "notebook.cell.copyUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "notebook.cell.delete",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "enter",
    "command": "notebook.cell.edit",
    "when": "notebookCellListFocused && notebookEditable && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "notebook.cell.focusInOutput",
    "when": "notebookCellHasOutputs && notebookEditorFocused"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "notebook.cell.focusOutOutput",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "ctrl+shift+alt+j",
    "command": "notebook.cell.joinAbove",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+alt+j",
    "command": "notebook.cell.joinBelow",
    "when": "notebookEditorFocused"
  },
  {
    "key": "alt+down",
    "command": "notebook.cell.moveDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "alt+up",
    "command": "notebook.cell.moveUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+.",
    "command": "notebook.cell.openFailureActions",
    "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
  },
  {
    "key": "cmd+r shift+cmd+\\",
    "command": "notebook.cell.split",
    "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "key": "ctrl+l",
    "command": "notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "cmd+/",
    "command": "notebook.commentSelectedCells",
    "when": "notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "alt+f3",
    "command": "notebook.diff.action.next",
    "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
  },
  {
    "key": "shift+alt+f3",
    "command": "notebook.diff.action.previous",
    "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
  },
  {
    "key": "cmd+f",
    "command": "notebook.find",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "cmd+end",
    "command": "notebook.focusBottom",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+down",
    "command": "notebook.focusBottom",
    "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
  },
  {
    "key": "down",
    "command": "notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "notebook.focusNextEditor",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "up",
    "command": "notebook.focusPreviousEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
  },
  {
    "key": "cmd+home",
    "command": "notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+up",
    "command": "notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
  },
  {
    "key": "left",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "alt+cmd+[",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "escape",
    "command": "notebook.hideFind",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "key": "right",
    "command": "notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "alt+cmd+]",
    "command": "notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "alt+cmd+r",
    "command": "revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "f4",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "shift+f4",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "cmd+enter",
    "command": "search.action.openInEditor",
    "when": "hasSearchResult && searchViewletFocus"
  },
  {
    "key": "cmd+down",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "cmd+up",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "shift+cmd+l",
    "command": "selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  {
    "key": "escape",
    "command": "settings.action.focusLevelUp",
    "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
  },
  {
    "key": "enter",
    "command": "settings.action.focusSettingControl",
    "when": "inSettingsEditor && settingRowFocus"
  },
  {
    "key": "enter",
    "command": "settings.action.focusSettingsList",
    "when": "inSettingsEditor && settingsTocRowFocus"
  },
  {
    "key": "left",
    "command": "settings.action.focusTOC",
    "when": "inSettingsEditor && settingRowFocus"
  },
  {
    "key": "shift+f9",
    "command": "settings.action.showContextMenu",
    "when": "inSettingsEditor"
  },
  {
    "key": "cmd+; shift+cmd+c",
    "command": "testing.coverageAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; shift+cmd+f",
    "command": "testing.coverageCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+c",
    "command": "testing.debugAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; cmd+f",
    "command": "testing.debugCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; c",
    "command": "testing.runAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+; f",
    "command": "testing.runCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+cmd+r",
    "command": "toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.chat.holdToVoiceChatInChatView",
    "when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.chat.startVoiceChat",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.chat.stopListeningAndSubmit",
    "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "cmd+r cmd+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+r w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "alt+cmd+t",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "cmd+r u",
    "command": "workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "alt+f5",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "cmd+r shift+o",
    "command": "workbench.action.compareEditor.openSide",
    "when": "inDiffEditor"
  },
  {
    "key": "shift+alt+f5",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "cmd+r o",
    "command": "workbench.action.copyEditorToNewWindow",
    "when": "activeEditor"
  },
  {
    "key": "cmd+r m",
    "command": "workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "alt+cmd+v",
    "command": "workbench.action.editorDictation.start",
    "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "cmd+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "down",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "up",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.interactivePlayground.pageDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pageup",
    "command": "workbench.action.interactivePlayground.pageUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "cmd+r shift+cmd+\\",
    "command": "workbench.action.joinEditorInGroup",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "cmd+r enter",
    "command": "workbench.action.keepEditor"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "cmd+r down",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+r left",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+r right",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+r up",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "cmd+r shift+cmd+left",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+r shift+cmd+right",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+cmd+1",
    "command": "workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "ctrl+cmd+9",
    "command": "workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "cmd+r alt+cmd+right",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "cmd+r shift+enter",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+cmd+left",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "cmd+r alt+cmd+left",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "alt+cmd+tab",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+r shift+cmd+\\",
    "command": "workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorUp"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+0",
    "command": "workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "cmd+r cmd+m",
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "key": "cmd+r shift+enter",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+r e",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "escape",
    "command": "breadcrumbs.selectEditor",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "cmd+a",
    "command": "notebook.cell.output.selectAll",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "ctrl+pageup",
    "command": "notebook.focusNextEditor",
    "when": "accessibilityModeEnabled && notebookCellEditorFocused"
  },
  {
    "key": "ctrl+pageup",
    "command": "notebook.focusPreviousEditor",
    "when": "accessibilityModeEnabled && notebookCellEditorFocused"
  },
  {
    "key": "escape",
    "command": "notebook.cell.quitEdit",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "shift+cmd+.",
    "command": "editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "shift+cmd+o",
    "command": "editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "cmd+e",
    "command": "editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "shift+alt+f1",
    "command": "editor.action.toggleScreenReaderAccessibilityMode"
  },
  {
    "key": "escape",
    "command": "editor.closeCallHierarchy",
    "when": "callHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "editor.closeTypeHierarchy",
    "when": "typeHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "key": "shift+escape",
    "command": "closeReferenceSearch",
    "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus"
  },
  {
    "key": "escape",
    "command": "closeReferenceSearch",
    "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "escape",
    "command": "workbench.action.chat.stopListening",
    "when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "escape",
    "command": "workbench.action.editorDictation.stop",
    "when": "editorDictation.inProgress"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "shift+cmd+v",
    "command": "markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "f",
    "command": "notebook.find",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "shift+alt+f12",
    "command": "references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "cmd+k cmd+n",
    "command": "git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "cmd+k v",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "a",
    "command": "notebook.cell.insertCodeCellAboveAndFocusContainer",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "shift+alt+h",
    "command": "references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "b",
    "command": "notebook.cell.insertCodeCellBelowAndFocusContainer",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "d d",
    "command": "notebook.cell.delete",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "z",
    "command": "undo",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "s",
    "command": "workbench.action.files.save",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "c",
    "command": "notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "x",
    "command": "notebook.cell.cut",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "v",
    "command": "notebook.cell.paste",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "shift+l",
    "command": "notebook.toggleLineNumbers",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "o",
    "command": "notebook.cell.toggleOutputs",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "l",
    "command": "notebook.cell.toggleLineNumbers",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "ctrl+shift+-",
    "command": "notebook.cell.split",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "notebook.cell.executeAndFocusContainer",
    "when": "notebookCellListFocused || editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "shift+enter",
    "command": "notebook.cell.executeAndSelectBelow",
    "when": "notebookCellListFocused && notebookCellType == 'code' || editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "shift+alt+u",
    "command": "java.projectConfiguration.update",
    "when": "editorFocus"
  },
  {
    "key": "shift+enter",
    "command": "jupyter.execSelectionInteractive",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "shift+enter",
    "command": "python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "shift+cmd+r",
    "command": "reactSnippets.search",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "workbench.action.chat.applyInEditor",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "key": "shift+enter",
    "command": "jupyter.runcurrentcelladvance",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
  },
  {
    "key": "shift+enter",
    "command": "python.execInREPL",
    "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "shift+cmd+v",
    "command": "java.action.clipboardPasteAction",
    "when": "javaLSReady && editorLangId == 'java'"
  },
  {
    "key": "ctrl+enter",
    "command": "jupyter.runcurrentcell",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
  },
  {
    "key": "enter",
    "command": "python.execInREPLEnter",
    "when": "!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "shift+cmd+v",
    "command": "java.action.filesExplorerPasteAction",
    "when": "config.editor.pasteAs.enabled && explorerViewletFocus"
  },
  {
    "key": "alt+enter",
    "command": "jupyter.runcurrentcellandaddbelow",
    "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
  },
  {
    "key": "alt+\\",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "key": "escape",
    "command": "interactive.input.clear",
    "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "ctrl+shift+alt+s",
    "command": "java.action.doCleanup",
    "when": "javaLSReady && editorLangId == 'java'"
  },
  {
    "key": "ctrl+; s",
    "command": "jupyter.insertCellBelowPosition",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "cmd+k v",
    "command": "quokka.showValue",
    "when": "quokka.hasActiveSession && quokka.isActiveEditorRunningQuokka && !quokka.isLiveShareClient && !terminalFocus"
  },
  {
    "key": "ctrl+; b",
    "command": "jupyter.insertCellBelow",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; a",
    "command": "jupyter.insertCellAbove",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; x",
    "command": "jupyter.deleteCells",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "cmd+k x",
    "command": "quokka.copyValue",
    "when": "quokka.hasActiveSession && quokka.isActiveEditorRunningQuokka && !quokka.isLiveShareClient && !terminalFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "aichat.cancelchat",
    "when": "activeAIChatEditor || view == 'workbench.panel.aichat.view' && (arbitrary function)"
  },
  {
    "key": "cmd+u",
    "command": "cursorai.action.retryInterpreterAction",
    "when": "activeAIChatEditor || view == 'workbench.panel.aichat.view' || (arbitrary function) && (arbitrary function)"
  },
  {
    "key": "ctrl+shift+alt+[",
    "command": "jupyter.extendSelectionByCellAbove",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+alt+]",
    "command": "jupyter.extendSelectionByCellBelow",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "escape",
    "command": "quokka.clearValue",
    "when": "editorTextFocus && quokka.isActiveEditorRunningQuokka && quokka.lineHasRemovableInlineValues && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && !vim.active || editorTextFocus && quokka.isActiveEditorRunningQuokka && quokka.lineHasRemovableInlineValues && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+; u",
    "command": "jupyter.moveCellsUp",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "escape escape",
    "command": "quokka.clearFileValues",
    "when": "editorTextFocus && quokka.fileHasRemovableInlineValues && quokka.isActiveEditorRunningQuokka && !editorHasSelection && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !quokka.lineHasRemovableInlineValues && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && !vim.active || editorTextFocus && quokka.fileHasRemovableInlineValues && quokka.isActiveEditorRunningQuokka && !editorHasSelection && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !quokka.lineHasRemovableInlineValues && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+; d",
    "command": "jupyter.moveCellsDown",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "shift+f5",
    "command": "quokka.stopTraceNavigation",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+; m",
    "command": "jupyter.changeCellToMarkdown",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "shift+f5",
    "command": "quokka.debug",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated || activeEditor && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+; c",
    "command": "jupyter.changeCellToCode",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "shift+alt+f5",
    "command": "quokka.debugAutoPlay",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated || activeEditor && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+alt+]",
    "command": "jupyter.gotoNextCellInFile",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "f11",
    "command": "quokka.playTraceNextStep",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+alt+[",
    "command": "jupyter.gotoPrevCellInFile",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "f5",
    "command": "quokka.playTraceForwardToSelection",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+alt+\\",
    "command": "jupyter.selectCellContents",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "f8",
    "command": "quokka.playTraceForwardToBreakpoint",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+shift+alt+\\",
    "command": "jupyter.selectCell",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "f10",
    "command": "quokka.playTraceNextStepOver",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "shift+f11",
    "command": "quokka.playTraceNextStepOut",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "jupyter.runAndDebugCell",
    "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'"
  },
  {
    "key": "ctrl+f11",
    "command": "quokka.playTracePrevStep",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "f10",
    "command": "jupyter.runByLine",
    "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'"
  },
  {
    "key": "ctrl+f5",
    "command": "quokka.playTraceBackwardToSelection",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "f10",
    "command": "jupyter.runByLineNext",
    "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
  },
  {
    "key": "ctrl+f8",
    "command": "quokka.playTraceBackwardToBreakpoint",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+enter",
    "command": "jupyter.runByLineStop",
    "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
  },
  {
    "key": "ctrl+f10",
    "command": "quokka.playTracePrevStepOver",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "ctrl+shift+f11",
    "command": "quokka.playTracePrevStepOut",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.inlineDiffs.acceptAll",
    "when": "editorTextFocus && (arbitrary function)"
  },
  {
    "key": "cmd+pausebreak",
    "command": "editor.action.inlineDiffs.acceptAllAcrossAllEditors",
    "when": "editorHasPromptBar && editorTextFocus || editorTextFocus && hasDisplayedDiff"
  },
  {
    "key": "cmd+y",
    "command": "editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorTextFocus && (arbitrary function)"
  },
  {
    "key": "cmd+backspace",
    "command": "editor.action.inlineDiffs.rejectAll",
    "when": "editorTextFocus && (arbitrary function)"
  },
  {
    "key": "cmd+ctrl",
    "command": "editor.action.inlineDiffs.rejectAllAcrossAllEditors",
    "when": "editorHasPromptBar && editorTextFocus || editorTextFocus && hasDisplayedDiff"
  },
  {
    "key": "cmd+ctrl",
    "command": "editor.action.inlineDiffs.rejectAllAcrossAllEditors",
    "when": "editorHasPromptBar && editorTextFocus || editorTextFocus && hasDisplayedDiff"
  },
  {
    "key": "cmd+n",
    "command": "editor.action.inlineDiffs.rejectPartialEdit",
    "when": "editorTextFocus && (arbitrary function)"
  },
  {
    "key": "cmd+backspace",
    "command": "editor.action.inlineDiffs.cancelEdits",
    "when": "editorTextFocus && hasActivelyGeneratingDiff"
  },
  {
    "key": "escape",
    "command": "editor.action.cancelGPT4WithCmdDelete",
    "when": "hadGPT4InlineCompletionRunning"
  },
  {
    "key": "cmd+backspace",
    "command": "editor.action.cancelGPT4WithCmdDelete",
    "when": "hadGPT4InlineCompletionRunning"
  },
  {
    "key": "cmd+n",
    "command": "editor.action.rejectGPT4",
    "when": "editorTextFocus && hasGPT4Diff"
  },
  {
    "key": "cmd+g",
    "command": "editor.action.simpleInlineDiffs.acceptAll",
    "when": "editorTextFocus && hasDisplayedSimpleDiff"
  },
  {
    "key": "cmd+h",
    "command": "editor.action.simpleInlineDiffs.rejectAll",
    "when": "editorTextFocus && hasDisplayedSimpleDiff"
  },
  {
    "key": "cmd+backspace",
    "command": "editor.action.inlineDiffs.cancelPromptBar",
    "when": "editorTextFocus && hasActivelyGeneratingPromptBarDiff"
  },
  {
    "key": "escape",
    "command": "aipopup.action.closePromptBar",
    "when": "editorHasPromptBar && editorPromptBarFocused && editorTextFocus"
  },
  {
    "key": "escape",
    "command": "diffEditor.exitCompareMove",
    "when": "comparingMovedCode"
  },
  {
    "key": "cmd+space",
    "command": "editor.action.inlineEdits.accept",
    "when": "inlineEditsVisible"
  }
]