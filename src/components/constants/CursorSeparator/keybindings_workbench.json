[
  {
    "key": "escape escape",
    "command": "workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "alt+enter",
    "command": "testing.editFocusedTest",
    "when": "focusedView == 'workbench.view.testing'"
  },
  {
    "key": "enter",
    "command": "editor.action.extensioneditor.findNext",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.extensioneditor.findPrevious",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "cmd+f",
    "command": "editor.action.extensioneditor.showfind",
    "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "cmd+enter",
    "command": "interactive.execute",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "shift+enter",
    "command": "interactive.execute",
    "when": "config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "enter",
    "command": "interactive.execute",
    "when": "!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "shift+alt+f",
    "command": "notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "alt+cmd+f",
    "command": "repl.action.find",
    "when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'"
  },
  {
    "key": "cmd+enter",
    "command": "repl.execute",
    "when": "activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "shift+enter",
    "command": "repl.execute",
    "when": "config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "enter",
    "command": "repl.execute",
    "when": "!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.repl'"
  },
  {
    "key": "cmd+r alt+cmd+c",
    "command": "workbench.action.addComment"
  },
  {
    "key": "cmd+/",
    "command": "workbench.action.chat.attachContext",
    "when": "inChatInput && chatLocation == 'panel' || config.chat.experimental.variables.editor && inChatInput && chatLocation == 'editor' || config.chat.experimental.variables.notebook && inChatInput && chatLocation == 'notebook' || config.chat.experimental.variables.terminal && inChatInput && chatLocation == 'terminal'"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "workbench.action.chat.runInTerminal",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat"
  },
  {
    "key": "enter",
    "command": "workbench.action.chat.submit",
    "when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.chat.submitSecondaryAgent",
    "when": "chatInputHasText && inChatInput && !chatInputHasAgent && !chatSessionRequestInProgress"
  },
  {
    "key": "alt+f5",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "escape",
    "command": "workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "cmd+f",
    "command": "commentsFocusFilter",
    "when": "focusedView == 'workbench.panel.comments'"
  },
  {
    "key": "down",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "down",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.repl' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "up",
    "command": "interactive.history.previous",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "key": "up",
    "command": "interactive.history.previous",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.repl' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "key": "cmd+down",
    "command": "interactive.scrollToBottom",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "cmd+up",
    "command": "interactive.scrollToTop",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "backspace",
    "command": "noteMultiCursor.deleteLeft",
    "when": "config.notebook.multiSelect.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectState == '1' || config.notebook.multiSelect.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectState == '2'"
  },
  {
    "key": "escape",
    "command": "noteMultiCursor.exit",
    "when": "config.notebook.multiSelect.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "cmd+d",
    "command": "notebook.addFindMatchToSelection",
    "when": "config.notebook.multiSelect.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "y",
    "command": "notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "key": "m",
    "command": "notebook.cell.changeToMarkdown",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
  },
  {
    "key": "alt+f3",
    "command": "notebook.diff.action.next",
    "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
  },
  {
    "key": "shift+alt+f3",
    "command": "notebook.diff.action.previous",
    "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
  },
  {
    "key": "cmd+f",
    "command": "notebook.find",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "left",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "alt+cmd+[",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "right",
    "command": "notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "alt+cmd+]",
    "command": "notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "cmd+c",
    "command": "problems.action.copy",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "cmd+f",
    "command": "problems.action.focusFilter",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "cmd+escape",
    "command": "workbench.action.chat.cancel"
  },
  {
    "key": "cmd+down",
    "command": "workbench.action.chat.focusInput",
    "when": "inChat && !inChatInput"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.chat.holdToVoiceChatInChatView",
    "when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "alt+cmd+pagedown",
    "command": "workbench.action.chat.nextCodeBlock",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "cmd+f9",
    "command": "workbench.action.chat.nextFileTree",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "workbench.action.chat.open"
  },
  {
    "key": "alt+cmd+pageup",
    "command": "workbench.action.chat.previousCodeBlock",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "shift+cmd+f9",
    "command": "workbench.action.chat.previousFileTree",
    "when": "chatIsEnabled && inChat"
  },
  {
    "key": "cmd+backspace",
    "command": "workbench.action.chat.remove",
    "when": "inChat && !inChatInput"
  },
  {
    "key": "shift+cmd+enter",
    "command": "workbench.action.chat.sendToNewChat",
    "when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.chat.startVoiceChat",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.chat.stopListeningAndSubmit",
    "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "cmd+r cmd+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+r shift+cmd+w",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "cmd+r w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "cmd+r f",
    "command": "workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "alt+cmd+t",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "escape",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+r u",
    "command": "workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "alt+f5",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "cmd+r shift+o",
    "command": "workbench.action.compareEditor.openSide",
    "when": "inDiffEditor"
  },
  {
    "key": "shift+alt+f5",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "cmd+r o",
    "command": "workbench.action.copyEditorToNewWindow",
    "when": "activeEditor"
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.disconnect",
    "when": "focusedSessionIsAttach && inDebugMode"
  },
  {
    "key": "shift+cmd+f5",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+f5",
    "command": "workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "f5",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "cmd+f11",
    "command": "workbench.action.debug.stepIntoTarget",
    "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "cmd+r m",
    "command": "workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "alt+cmd+v",
    "command": "workbench.action.editorDictation.start",
    "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
  },
  {
    "key": "cmd+r p",
    "command": "workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.files.openFile",
    "when": "false"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.files.openLocalFileFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "cmd+r r",
    "command": "workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "cmd+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "shift+cmd+s",
    "command": "workbench.action.files.saveAs"
  },
  {
    "key": "shift+cmd+s",
    "command": "workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "cmd+r s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "shift+cmd+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "cmd+r cmd+up",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+r cmd+down",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "cmd+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "cmd+r cmd+left",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "f6",
    "command": "workbench.action.focusNextPart"
  },
  {
    "key": "shift+f6",
    "command": "workbench.action.focusPreviousPart"
  },
  {
    "key": "cmd+r cmd+right",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "cmd+0",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "shift+cmd+o",
    "command": "workbench.action.gotoSymbol",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "key": "down",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "up",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.interactivePlayground.pageDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pageup",
    "command": "workbench.action.interactivePlayground.pageUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "cmd+r shift+cmd+\\",
    "command": "workbench.action.joinEditorInGroup",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "cmd+r enter",
    "command": "workbench.action.keepEditor"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.keychord.leader",
    "when": "false"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "cmd+r down",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+r left",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+r right",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+r up",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "cmd+r shift+cmd+left",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+r shift+cmd+right",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+cmd+1",
    "command": "workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "ctrl+cmd+9",
    "command": "workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+-",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+shift+-",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "cmd+r cmd+q",
    "command": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "shift+cmd+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "cmd+r alt+cmd+right",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "cmd+r cmd+s",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "cmd+,",
    "command": "workbench.action.openSettings"
  },
  {
    "key": "shift+cmd+u",
    "command": "workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "cmd+r shift+enter",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+cmd+left",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "cmd+r alt+cmd+left",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenView"
  },
  {
    "key": "shift+cmd+i",
    "command": "workbench.action.quickchat.toggle",
    "when": "chatIsEnabled"
  },
  {
    "key": "cmd+q",
    "command": "workbench.action.quit"
  },
  {
    "key": "alt+cmd+o",
    "command": "workbench.action.remote.showMenu"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "cmd+r cmd+t",
    "command": "workbench.action.selectTheme"
  },
  {
    "key": "alt+cmd+tab",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "f1",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+r shift+cmd+\\",
    "command": "workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "cmd+r cmd+\\",
    "command": "workbench.action.splitEditorUp"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.switchWindow"
  },
  {
    "key": "shift+cmd+b",
    "command": "workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.terminal.chat.close",
    "when": "terminalChatFocus && terminalChatVisible"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.chat.close",
    "when": "terminalChatFocus && terminalChatVisible"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.terminal.chat.focusInput",
    "when": "terminalChatFocus && !inlineChatFocused"
  },
  {
    "key": "cmd+up",
    "command": "workbench.action.terminal.chat.focusInput",
    "when": "terminalChatFocus && !inlineChatFocused"
  },
  {
    "key": "cmd+down",
    "command": "workbench.action.terminal.chat.focusResponse",
    "when": "terminalChatFocus"
  },
  {
    "key": "alt+cmd+enter",
    "command": "workbench.action.terminal.chat.insertCommand",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "key": "alt+enter",
    "command": "workbench.action.terminal.chat.insertCommand",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "key": "alt+cmd+enter",
    "command": "workbench.action.terminal.chat.insertFirstCommand",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "key": "alt+enter",
    "command": "workbench.action.terminal.chat.insertFirstCommand",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "key": "enter",
    "command": "workbench.action.terminal.chat.makeRequest",
    "when": "terminalChatFocus && terminalHasBeenCreated && !inlineChatEmpty && !terminalChatActiveRequest || terminalChatFocus && terminalProcessSupported && !inlineChatEmpty && !terminalChatActiveRequest"
  },
  {
    "key": "down",
    "command": "workbench.action.terminal.chat.nextFromHistory",
    "when": "terminalChatFocus"
  },
  {
    "key": "up",
    "command": "workbench.action.terminal.chat.previousFromHistory",
    "when": "terminalChatFocus"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.terminal.chat.runCommand",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.terminal.chat.runFirstCommand",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.clearSelection",
    "when": "terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
  },
  {
    "key": "cmd+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "f3",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "cmd+g",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "shift+enter",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "shift+f3",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "enter",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "cmd+down",
    "command": "workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "cmd+up",
    "command": "workbench.action.terminal.focusAccessibleBuffer",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+f2",
    "command": "workbench.action.terminal.focusAccessibleBuffer",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+f",
    "command": "workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "cmd+r cmd+i",
    "command": "workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "alt+cmd+down",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+right",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+left",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+g",
    "command": "workbench.action.terminal.goToRecentDirectory",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "delete",
    "command": "workbench.action.terminal.killActiveTab",
    "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "workbench.action.terminal.killActiveTab",
    "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+cmd+c",
    "command": "workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "enter",
    "command": "workbench.action.terminal.renameActiveTab",
    "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.terminal.runRecentCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "alt+cmd+pagedown",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "cmd+end",
    "command": "workbench.action.terminal.scrollToBottom",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "cmd+end",
    "command": "workbench.action.terminal.scrollToBottomAccessibleView",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "cmd+down",
    "command": "workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "cmd+up",
    "command": "workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "cmd+home",
    "command": "workbench.action.terminal.scrollToTop",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "cmd+home",
    "command": "workbench.action.terminal.scrollToTopAccessibleView",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "alt+cmd+pageup",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "pageup",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "cmd+a",
    "command": "workbench.action.terminal.selectAll",
    "when": "terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+down",
    "command": "workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+up",
    "command": "workbench.action.terminal.selectToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+.",
    "command": "workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  {
    "key": "alt+z",
    "command": "workbench.action.terminal.sizeToContentWidth",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+5",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+5",
    "command": "workbench.action.terminal.splitActiveTab",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.terminal.splitActiveTab",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+r",
    "command": "workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+w",
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+cmd+b",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "alt+cmd+0",
    "command": "workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "ctrl+cmd+f",
    "command": "workbench.action.toggleFullScreen",
    "when": "!isIOS"
  },
  {
    "key": "cmd+r cmd+m",
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+r z",
    "command": "workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "cmd+r shift+enter",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+numpad_add",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "cmd+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "cmd+numpad_subtract",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "shift+cmd+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "cmd+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "cmd+numpad0",
    "command": "workbench.action.zoomReset"
  },
  {
    "key": "shift+cmd+m",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "escape",
    "command": "workbench.banner.focusBanner",
    "when": "bannerFocused"
  },
  {
    "key": "down",
    "command": "workbench.banner.focusNextAction",
    "when": "bannerFocused"
  },
  {
    "key": "right",
    "command": "workbench.banner.focusNextAction",
    "when": "bannerFocused"
  },
  {
    "key": "up",
    "command": "workbench.banner.focusPreviousAction",
    "when": "bannerFocused"
  },
  {
    "key": "left",
    "command": "workbench.banner.focusPreviousAction",
    "when": "bannerFocused"
  },
  {
    "key": "shift+alt+cmd+y",
    "command": "workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "cmd+r c",
    "command": "workbench.files.action.compareWithClipboard"
  },
  {
    "key": "cmd+r d",
    "command": "workbench.files.action.compareWithSaved"
  },
  {
    "key": "cmd+r e",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "escape",
    "command": "workbench.statusBar.clearFocus",
    "when": "statusBarFocused"
  },
  {
    "key": "home",
    "command": "workbench.statusBar.focusFirst",
    "when": "statusBarFocused"
  },
  {
    "key": "end",
    "command": "workbench.statusBar.focusLast",
    "when": "statusBarFocused"
  },
  {
    "key": "down",
    "command": "workbench.statusBar.focusNext",
    "when": "statusBarFocused"
  },
  {
    "key": "right",
    "command": "workbench.statusBar.focusNext",
    "when": "statusBarFocused"
  },
  {
    "key": "up",
    "command": "workbench.statusBar.focusPrevious",
    "when": "statusBarFocused"
  },
  {
    "key": "left",
    "command": "workbench.statusBar.focusPrevious",
    "when": "statusBarFocused"
  },
  {
    "key": "shift+cmd+d",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "shift+cmd+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+cmd+x",
    "command": "workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "shift+cmd+f",
    "command": "workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "f3",
    "command": "list.find.replInputFocus",
    "when": "view == 'workbench.panel.repl.view'"
  },
  {
    "key": "alt+cmd+f",
    "command": "list.find.replInputFocus",
    "when": "view == 'workbench.panel.repl.view'"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.debug.nextConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.debug.prevConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "tab",
    "command": "workbench.action.terminal.acceptSelectedSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "enter",
    "command": "workbench.action.terminal.acceptSelectedSuggestionEnter",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore'"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.terminal.clear",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.hideSuggestWidget",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "shift+cmd+o",
    "command": "workbench.action.terminal.openDetectedLink",
    "when": "terminalFocus && terminalHasBeenCreated"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.action.terminal.openDetectedLink",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.terminal.selectNextPageSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "workbench.action.terminal.selectNextSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "pageup",
    "command": "workbench.action.terminal.selectPrevPageSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "up",
    "command": "workbench.action.terminal.selectPrevSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "cmd+k",
    "command": "workbench.debug.panel.action.clearReplAction",
    "when": "focusedView == 'workbench.panel.repl.view'"
  },
  {
    "key": "f6",
    "command": "workbench.action.debug.pause",
    "when": "debugState == 'running'"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.terminal.accessibleBufferGoToNextCommand",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "alt+up",
    "command": "workbench.action.terminal.accessibleBufferGoToPreviousCommand",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "f5",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f11",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "ctrl+-",
    "command": "workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "shift+cmd+p",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "shift+cmd+f",
    "command": "workbench.action.terminal.searchWorkspace",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "alt+cmd+i",
    "command": "workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "escape",
    "command": "workbench.action.chat.stopListening",
    "when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "escape",
    "command": "workbench.action.chat.stopReadChatItemAloud",
    "when": "scopedChatSynthesisInProgress"
  },
  {
    "key": "escape",
    "command": "workbench.action.editorDictation.stop",
    "when": "editorDictation.inProgress"
  },
  {
    "key": "escape",
    "command": "workbench.action.speech.stopReadAloud",
    "when": "scopedChatSynthesisInProgress && textToSpeechInProgress"
  },
  {
    "key": "f11",
    "command": "extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
  },
  {
    "key": "s",
    "command": "workbench.action.files.save",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
  },
  {
    "key": "shift+enter",
    "command": "jupyter.execSelectionInteractive",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "shift+enter",
    "command": "python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "ctrl+enter",
    "command": "workbench.action.chat.applyInEditor",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "key": "ctrl+enter",
    "command": "workbench.action.chat.insertCodeBlock",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.terminal.chat.start",
    "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "shift+enter",
    "command": "python.execInREPL",
    "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "enter",
    "command": "python.execInREPLEnter",
    "when": "!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "escape",
    "command": "interactive.input.clear",
    "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "cmd+backspace",
    "command": "aichat.cancelchat",
    "when": "activeAIChatEditor || view == 'workbench.panel.aichat.view' && (arbitrary function)"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "aichat.selectNextTab",
    "when": "view == 'workbench.panel.aichat.view'"
  },
  {
    "key": "ctrl+tab",
    "command": "aichat.selectPreviousTab",
    "when": "view == 'workbench.panel.aichat.view'"
  },
  {
    "key": "cmd+u",
    "command": "cursorai.action.retryInterpreterAction",
    "when": "activeAIChatEditor || view == 'workbench.panel.aichat.view' || (arbitrary function) && (arbitrary function)"
  }
]