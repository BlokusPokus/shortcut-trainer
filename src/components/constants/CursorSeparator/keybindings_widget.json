[
  {
    "key": "cmd+up",
    "command": "notebook.cell.focusChatWidget",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "key": "cmd+down",
    "command": "notebook.cell.focusNextChatWidget",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "enter",
    "command": "breakpointWidget.action.acceptInput",
    "when": "breakpointWidgetVisible && inBreakpointWidget"
  },
  {
    "key": "shift+escape",
    "command": "closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "enter",
    "command": "editor.action.extensioneditor.findNext",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.extensioneditor.findPrevious",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "cmd+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "alt+escape",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "enter",
    "command": "editor.action.webvieweditor.findNext",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.webvieweditor.findPrevious",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "escape",
    "command": "editor.action.webvieweditor.hideFind",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "cmd+f",
    "command": "editor.action.webvieweditor.showFind",
    "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "cmd+.",
    "command": "editor.changeDropType",
    "when": "dropWidgetVisible"
  },
  {
    "key": "cmd+.",
    "command": "editor.changePasteType",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "escape",
    "command": "editor.debug.action.closeExceptionWidget",
    "when": "exceptionWidgetVisible"
  },
  {
    "key": "escape",
    "command": "editor.hideDropWidget",
    "when": "dropWidgetVisible"
  },
  {
    "key": "escape",
    "command": "editor.hidePasteWidget",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "escape",
    "command": "search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "down",
    "command": "settings.action.focusSettingsFile",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "cmd+/",
    "command": "toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "cmd+r f2",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "shift+escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "alt+cmd+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "shift+cmd+1",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "enter",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "acceptAlternativeSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+enter",
    "command": "acceptAlternativeSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "enter",
    "command": "acceptSelectedSuggestion",
    "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "cmd+i",
    "command": "focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+space",
    "command": "focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "shift+escape",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "insertBestCompletion",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "shift+tab",
    "command": "insertPrevSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "cmd+pagedown",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "pagedown",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "cmd+down",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "down",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "cmd+pageup",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "pageup",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "cmd+up",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "up",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "cmd+i",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+alt+space",
    "command": "toggleSuggestionFocus",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "closeReplaceInFilesWidget",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "key": "tab",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "alt+down",
    "command": "history.showNext",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "history.showNext",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "alt+up",
    "command": "history.showPrevious",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "up",
    "command": "history.showPrevious",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "down",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.repl' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "up",
    "command": "interactive.history.previous",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "key": "up",
    "command": "interactive.history.previous",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.repl' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "key": "enter",
    "command": "keybindings.editor.acceptWhenExpression",
    "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
  },
  {
    "key": "escape",
    "command": "keybindings.editor.rejectWhenExpression",
    "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
  },
  {
    "key": "escape",
    "command": "notebook.hideFind",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "key": "escape",
    "command": "scm.clearInput",
    "when": "scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "scm.viewNextCommit",
    "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "up",
    "command": "scm.viewPreviousCommit",
    "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "alt+cmd+enter",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "down",
    "command": "settings.action.focusSettingsFromSearch",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "cmd+down",
    "command": "widgetNavigation.focusNext",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
  },
  {
    "key": "cmd+up",
    "command": "widgetNavigation.focusPrevious",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'"
  },
  {
    "key": "tab",
    "command": "workbench.action.terminal.acceptSelectedSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "enter",
    "command": "workbench.action.terminal.acceptSelectedSuggestionEnter",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore'"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.hideSuggestWidget",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.terminal.selectNextPageSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "workbench.action.terminal.selectNextSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "pageup",
    "command": "workbench.action.terminal.selectPrevPageSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "up",
    "command": "workbench.action.terminal.selectPrevSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "escape",
    "command": "interactive.input.clear",
    "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "escape",
    "command": "quokka.clearValue",
    "when": "editorTextFocus && quokka.isActiveEditorRunningQuokka && quokka.lineHasRemovableInlineValues && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && !vim.active || editorTextFocus && quokka.isActiveEditorRunningQuokka && quokka.lineHasRemovableInlineValues && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && vim.mode == 'Normal'"
  },
  {
    "key": "escape escape",
    "command": "quokka.clearFileValues",
    "when": "editorTextFocus && quokka.fileHasRemovableInlineValues && quokka.isActiveEditorRunningQuokka && !editorHasSelection && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !quokka.lineHasRemovableInlineValues && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && !vim.active || editorTextFocus && quokka.fileHasRemovableInlineValues && quokka.isActiveEditorRunningQuokka && !editorHasSelection && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !quokka.lineHasRemovableInlineValues && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && vim.mode == 'Normal'"
  },
  {
    "key": "shift+escape",
    "command": "hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "escape",
    "command": "hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  }
]